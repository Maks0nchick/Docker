name: CI-CD  # –ù–∞–∑–≤–∞–Ω–∏–µ workflow (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ GitHub Actions)

on:
  push:
    branches: [main]  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ push –≤ –≤–µ—Ç–∫—É main

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –≤–æ –≤—Å–µ—Ö jobs
env:
  APP_IMAGE_NAME: myapp              # –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
  DB_HOST: localhost
  DB_PORT: 5432
  DB_NAME: kubsu
  DB_USER: kubsu
  DB_PASS: kubsu

jobs:
  # üõ† –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞ (builder-stage)
  build:
    runs-on: self-hosted             # –ó–∞–ø—É—Å–∫ job –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º runner
    outputs:                         # –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–∏–µ jobs
      image-tag: ${{ steps.set-tag.outputs.tag }}

    steps:
      - name: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v3

      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–≥–∞ –∏–∑ SHA –∫–æ–º–º–∏—Ç–∞
        id: set-tag
        run: echo "tag=${{ env.APP_IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: –°–±–æ—Ä–∫–∞ builder-–æ–±—Ä–∞–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        run: docker build --target builder -t ${{ steps.set-tag.outputs.tag }} .

  # ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ builder-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
  test:
    runs-on: self-hosted
    needs: build                    # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è build

    services:                       # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä PostgreSQL
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
        ports:
          - ${{ env.DB_PORT }}:${{ env.DB_PORT }}
        options: >-
          --health-cmd "pg_isready -U ${{ env.DB_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
        run: |
          until pg_isready -h ${{ env.DB_HOST }} -p ${{ env.DB_PORT }} -U ${{ env.DB_USER }}; do
            echo "‚è≥ Waiting for Postgres..."
            sleep 2
          done

      - name: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        run: |
          docker run --rm \
            --network host \
            -e PYTHONPATH=/app \
            -e DB_HOST=${{ env.DB_HOST }} \
            -e DB_PORT=${{ env.DB_PORT }} \
            -e DB_NAME=${{ env.DB_NAME }} \
            -e DB_USER=${{ env.DB_USER }} \
            -e DB_PASS=${{ env.DB_PASS }} \
            ${{ needs.build.outputs.image-tag }} \
            pytest tests

  # üöÄ –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
  deploy:
    runs-on: self-hosted
    needs: [build, test]           # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ build –∏ test —É—Å–ø–µ—à–Ω—ã

    steps:
      - name: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
        uses: actions/checkout@v3

      - name: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH-–∞–≥–µ–Ω—Ç–∞
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: –°–±–æ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ production-–æ–±—Ä–∞–∑–∞
        run: docker build -t ${{ env.APP_IMAGE_NAME }}:final .

      - name: –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        run: |
          echo "üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."

          # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Docker-–æ–±—Ä–∞–∑ –ø–æ SSH –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          docker save ${{ env.APP_IMAGE_NAME }}:final | ssh -o StrictHostKeyChecking=no \
            -p ${{ secrets.PORT }} \
            ${{ secrets.USER }}@${{ secrets.HOST }} \
            "podman load && podman tag ${{ env.APP_IMAGE_NAME }}:final ${{ env.APP_IMAGE_NAME }}:final"

          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–π –º–∞—à–∏–Ω–µ
          ssh -o StrictHostKeyChecking=no \
            -p ${{ secrets.PORT }} \
            ${{ secrets.USER }}@${{ secrets.HOST }} \
            "podman stop ${{ env.APP_IMAGE_NAME }} || true && \
             podman rm ${{ env.APP_IMAGE_NAME }} || true && \
             podman run -d --name ${{ env.APP_IMAGE_NAME }} \
             --network=host \
             ${{ env.APP_IMAGE_NAME }}:final"
